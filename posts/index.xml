<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Luke Briggs</title>
        <link>https://codeluke.github.io/posts/</link>
        <description>All Posts | Luke Briggs</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>contact@lukebriggs.dev (Luke Briggs)</managingEditor>
            <webMaster>contact@lukebriggs.dev (Luke Briggs)</webMaster><lastBuildDate>Sat, 01 May 2021 21:25:15 &#43;0000</lastBuildDate><atom:link href="https://codeluke.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Goodbye Windows, I Hardly GNU ya</title>
    <link>https://codeluke.github.io/goodbye-windows-i-hardly-gnu-ya/</link>
    <pubDate>Sat, 01 May 2021 21:25:15 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://codeluke.github.io/goodbye-windows-i-hardly-gnu-ya/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/13/desktop.png" referrerpolicy="no-referrer">
            </div><p><strong>Preface: I should state that this is not an evangelical sermon, Linux isn&rsquo;t for everyone but it is for me. This is merely a detailing of why I have chosen to switch Operating System</strong></p>
<p>I have, over the course of the past year, consumed pretty much every interpretation and adaptation of Sherlock Holmes out there, from the original works to tangentially linked shows such as the excellent House MD; one thing I have come to understand is that you can only deduce correctly if your initial assumptions are correct. Logic is useless if its underlying axioms are unstable.</p>
<p>So we turn to my current assumption when I use computers &ldquo;Everything must be done in Windows&rdquo;. I have used Windows all my life, all the software I need is on Windows, and all other operating systems are either anaemic in their UX and feature set or are incapable of running on my hardware. It just stands to reason, or does it?</p>
<p>Lets look at that first point, &lsquo;I have used Windows all my life&rsquo;. That is not a very good reason, and the weakest of all. It is indeed true but it shouldn&rsquo;t have any bearing on choice of Operating System, it is an unquestioned ideology rather than any valid argument.</p>
<p>The second axiom, &lsquo;all the software I need is on windows&rsquo;, was probably true for quite a long time. For instance, if I wanted to play any windows games I would have been bang out of luck in days gone by, but tools such as <a href="https://lutris.net/" target="_blank" rel="noopener noreffer">Lutris</a> and the strides made in <a href="https://www.winehq.org/" target="_blank" rel="noopener noreffer">WINE</a> have made that side of things perfectly capable for my needs. Needless to say Mac is straying further away at this point with their move to ARM so the assumption still holds true for them. Outside of gaming, all the apps I <em>need</em> are actually available on Linux. My academic work in Computer Science lends itself perfectly to Linux. All the IDEs I use (the JetBrains suite) are available and the terminal is actually more conducive to my studies compared to the limited Unix-like aliases in the Windows Powershell. The only notable exception on Linux is the lack of the Microsoft Office Suite, but I was quite staggered when I realised that I don&rsquo;t actually have any need for it. My long form writing is now done in LaTeX (<a href="https://www.lukebriggs.dev/17" target="_blank" rel="noopener noreffer">see my reasons for that here</a>), and I don&rsquo;t use Excel or PowerPoint. Should the need ever arise, there is the native <a href="https://www.libreoffice.org/" target="_blank" rel="noopener noreffer">LibreOffice</a> suite, and the cross platform <a href="https://docs.google.com" target="_blank" rel="noopener noreffer">Google Docs</a>. And if compatibility is a necessity then Microsoft also now offers a web app version of the suite.</p>
<p>The second point links to the third, that other operating systems have terrible UX. The king of UX is obviously MacOS, but that obviously doesn&rsquo;t support my hardware or the ability to run the occasional windows game. I had always perceived Linux as having terrible UX because I always just viewed through the lens of someone who has used Windows their whole life. I always just assumed (once again question your assumptions) that how a Linux distro shipped was how it was. I thought I would have to be stuck with the bland, Ubuntu default GNOME desktop and icons with their washed out colours and pre-iOS 6 style realism. I was completely wrong about this and now we are going to look at where Linux, my new Operating System, is actually better for my needs.</p>
<h1 id="the-linux-way-of-thinking">The Linux way of thinking</h1>
<p>Linux is about what Computers were built to do, and it is about the things that us Computer people love. GNU/Linux is a whole software ecosystem that is far greater than what Windows could ever hope for and only rivaled by what Apple has cultivated on its platforms. Unlike Apple, however, GNU/Linux also offers the user complete freedom in every aspect, and there are levels to this. Yes there are demigods that are compiling their own kernels but because there is such a community driven approach, other people have performed every possible layer of abstraction. Over the decades other people have been putting rungs at all levels of the ladder for other people to step on. Because Linux is built for the community by the community, it doesn&rsquo;t fight me.</p>
<p>If I wanted to change the interface on windows, I would need to install several third party apps, each using their own design language and frameworks all while eating up huge amounts of RAM as they do so. In Linux its as easy as choosing an overall desktop environment you like and customisation is welcomed with open arms as a basic human right. Surprisingly, Linux also has an incredibly consistent design language because of how its built. In Windows you have all sorts of frameworks from many decades that all conflict. You&rsquo;ll go from a UWP app with its tile based design ideas, and then open a WPF app that has a reasonable flat aesthetic and some okay ideas, before finally finding one of your applications uses WinForms with all of its tabs and ugly green loading bars. Almost everything on Linux using either the Gtk or Qt GUI libraries, and because of this everything looks consistent. Most Desktop Environments also let you either make or download your own themes for these graphics libraries. As a result you can make all the colours, buttons and menus in the ENTIRE Linux ecosystem look how you want.</p>
<p>The Linux way is for people who care about these things. If you care about things like the same apps using the same frameworks, or the fact that you can use package managers to allow apps to auto-update and avoid redundant dependencies, or how you have a whole community of people who&rsquo;s only incentive is to make good software.</p>
<h1 id="technical-details">Technical Details</h1>
<p><strong>Distribution</strong>: <a href="https://manjaro.org/" target="_blank" rel="noopener noreffer">Manjaro</a></p>
<p><strong>Desktop Environment</strong>: <a href="https://kde.org/plasma-desktop/" target="_blank" rel="noopener noreffer">KDE Plasma</a></p>
<p><strong>Theme</strong>: Breeze Dark</p>
<p><strong>Icon Set</strong>: <a href="https://github.com/yeyushengfan258/Reversal-icon-theme" target="_blank" rel="noopener noreffer">Reversal</a></p>
<p><strong>Background</strong>: (<a href="https://i.imgur.com/DUXXqM2.jpg" target="_blank" rel="noopener noreffer">Imgur</a>) (<a href="/static/postimages/13/themagichour.png" rel="">Mirror</a>)</p>
<h2 id="why-manjaro">Why Manjaro?</h2>
<p>I chose Manjaro, at first by design and then retroactively I realised that I would have had to go with something like it anyway. I wanted a distribution that didn&rsquo;t come with the usual GNOME look, something that either looked excellent at first glance or had extensive customisation capabilities, and something that was pretty light on what it came with. I ended up narrowing it down to <a href="https://manjaro.org/" target="_blank" rel="noopener noreffer">Manjaro</a> and <a href="https://elementary.io/" target="_blank" rel="noopener noreffer">Elementary OS</a>. In the end I chose Manjaro between the two because Elementary seemed slightly far behind in its update cycle compared to the Ubuntu it is based off and its never fun to start off with something knowing there is a major version incredibly close. It turned out in the end that Manjaro was really my best choice between the two anyway thanks to its easy switching between Kernels. I currently need to be running the latest experimental kernel for my touch pad to work.</p>
]]></description>
</item><item>
    <title>Inspection and Dissection: Type or Die</title>
    <link>https://codeluke.github.io/inspection-and-dissection-type-or-die/</link>
    <pubDate>Fri, 05 Mar 2021 12:11:40 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://codeluke.github.io/inspection-and-dissection-type-or-die/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/21/cover.png" referrerpolicy="no-referrer">
            </div><blockquote>
<p><a href="https://lukebriggs.itch.io/type-or-die" target="_blank" rel="noopener noreffer">Itch.io Link</a></p>
</blockquote>
<p>For the past 5 days I have done what I have failed to do many times before,
complete the process of making a game.</p>
<p>The game was for the NUCATS Game Jam. NUCATS is the Newcastle University Computing
and Technology Society. It was made in Unity (with great help from <a href="https://www.youtube.com/channel/UCYbK_tjZ2OrIZFBvU6CCMiA" target="_blank" rel="noopener noreffer">Brackeys</a>),
and it was really the first reasonably sized game I&rsquo;ve made. The only other thing I&rsquo;ve ever made in Unity was <a href="/8" rel="">Ping</a>
which, as the name suggests, was a pong clone.</p>
<p>Type or Die is a top-down zombie shooter where it is not about how good
your aim is, but how fast you can type. Waves of zombies come at you in all directions, with the direction
they come from determining what key to press to shoot at them (e.g a zombie coming from the top right would be shot at
using the &lsquo;p&rsquo; key).</p>
<p></p>
<p>The game jam has come in a time between some pretty busy weeks so I have surprised myself by actually getting a
finished game out. I even contemplated not taking part at all after the first day because I felt I just wouldn&rsquo;t be able to do it.
I started off (as optimistic idiots often do) full of goals with zero plans. Every step of the way I was decreasing scope
to match my skill and enthusiasm, and its where those paths crossed that the game was made. I knew that the most complex
thing I could make in the time with limited skill was a 2d, single-screen game. Guns are an easy way to make the mundane exciting,
so the game became a shooter, and wanting to have the computer do all the work for you meant that it became a wave shooter for
replayability.</p>
<p>Every waking moment from Monday to Thursday was spent either watching <a href="https://www.imdb.com/title/tt1632701/?ref_=fn_al_tt_1" target="_blank" rel="noopener noreffer">Suits</a>
or making this game, and the sheer intensity of such an endeavour in the middle of some pretty hectic University team projects
made me realise one thing, I will probably not make another game for a very long time. If you have a gander at my <a href="/projects" rel="">projects</a> page
you will see that all of them are game, so you may think that I really enjoy game-making. But in retrospect I think I only made games as
an outlet for programming rather than an outlet for artistic ideas. Creation is a painful process, so you have to see the purpose in it.
As much as I am proud of what I achieved with each of the games I made, I can&rsquo;t see them as providing a service.</p>
<p>My perspective on games has completely changed in the past year, I place a huge value on the incredible narrative experiences offered by the likes of &lsquo;God of War&rsquo; or
&lsquo;The Beginners Guide&rsquo;, these are games made by people with something to say and the skill to say it. There is certainly a place for arcade
shooters, but if I don&rsquo;t feel passionate about the things I create then I will never see them as worth the time I put into them.</p>
<p>Type or Die marks the end of the 4-year-long adventure that started this whole blog off, I suppose it is fitting that it should end with another
top down arcade shooter. The game is pretty fun, the zombie death animations are my favourite part (also an original theme made by my musically inept hand).</p>
<p>More projects lie on the horizon, and the times they are a changin'.</p>
]]></description>
</item><item>
    <title>You Can Now Follow Me on RSS!</title>
    <link>https://codeluke.github.io/you-can-now-follow-me-on-rss/</link>
    <pubDate>Thu, 18 Feb 2021 20:52:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://codeluke.github.io/you-can-now-follow-me-on-rss/</guid>
    <description><![CDATA[<p>I had a bit of time today and I wanted to do something so here we are.
Thanks to the incredible <a href="https://feedgen.kiesow.be/" target="_blank" rel="noopener noreffer">FeedGen</a> python library, you can now point your RSS reader to <a href="/index.xml" rel="">here</a> and get updates on when I write a new post.</p>
]]></description>
</item><item>
    <title>Inspection &amp; Dissection: This Site!</title>
    <link>https://codeluke.github.io/inspection-and-dissection-this-site/</link>
    <pubDate>Wed, 03 Feb 2021 16:39:25 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://codeluke.github.io/inspection-and-dissection-this-site/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/12/index.png" referrerpolicy="no-referrer">
            </div><p>Look at me with a fancy website. We&rsquo;re about to get meta as we discuss how this site you&rsquo;re exploring right now came to be.</p>
<h1 id="why-have-a-website">Why have a website?</h1>
<p>I want something to point to when someone asks &lsquo;so what have you done?&rsquo;. I also need it for when I ask myself the same thing. Sometimes I wonder how much I have actually done in my spare time, and a site like this helps me to remember that I haven&rsquo;t wasted <em>all</em> of my spare time on Minecraft.</p>
<h1 id="why-make-your-own-website">Why make your own website?</h1>
<p>Here in Computer Science land: men are real men, women are real women, and small furry creatures from Alpha Centauri are real small furry creatures from Alpha Centauri; thanks to these huge revelations in the field of existentialism we take it upon ourselves to walk the road already taken.</p>
<p>The real reason is I ought to have side-projects, more than I used to. I have more time, not just because of COVID but also because Computer Science is now the only academic subject I have to pay attention to, whereas most of my time in Sixth Form was spent on Maths and Further Maths. It made reasonable sense for the first project to be a platform for my other projects and this is that platform.</p>
<h1 id="where-did-you-start">Where did you start?</h1>
<p>I knew I wanted to make a website with a Flask back end for 2 reasons:</p>
<ol>
<li>
<p>I wanted a back-end that could enable things like logging in and writing blog posts all within the site.</p>
</li>
<li>
<p>I vehemently hate JavaScript and would prefer to do as much with python as possible. In fact this whole site doesn&rsquo;t have any JavaScript. You can inspect element and see that everything front end is done through CSS and HTML; this is certain to change but I will hold out for as long as I can.</p>
</li>
</ol>
<p>For the uninitiated, websites have 2 parts: A front end and a back end. In a simple form, the front end is everything you see (HTML, CSS, JS) and the backend is everything you don&rsquo;t (Databases, Form requests, etc). Flask is a python framework that allows the said language to be used to serve all your requests.</p>
<p>I had used Flask in the past whilst following the <a href="https://cs50.harvard.edu/x/2021/" target="_blank" rel="noopener noreffer">Harvard CS50x</a> course back in 2019 to make a fake stocks app (💎👐). This time round, to re-familiarise myself I followed <a href="https://flask.palletsprojects.com/en/1.1.x/tutorial/" target="_blank" rel="noopener noreffer">this excellent tutorial</a>.</p>
<p>After you are let loose on your own (especially in web dev) I found you have to have goals and a purpose to what you are doing otherwise it&rsquo;ll never happened. I persevered through the trial-and-error process that is CSS</p>
<p>I used a couple of sites for reference when I was making the design for the sight. These were the sights of: my new friend <a href="https://gwood.dev" target="_blank" rel="noopener noreffer">George Wood</a>, the blog of <a href="https://www.caseyliss.com/" target="_blank" rel="noopener noreffer">Casey Liss</a>, the blog of <a href="https://marco.org" target="_blank" rel="noopener noreffer">Marco Arment</a>, and <a href="https://hypercritical.co" target="_blank" rel="noopener noreffer">Hypercritical</a> (No prizes for guessing which podcast I listen to).</p>
<h1 id="what-extra-things-have-you-done">What extra things have you done?</h1>
<p>I&rsquo;m honoured at your presumption that I go above and beyond in the call of duty. The main thing I have done is make all my posts in markdown. Yes, all my posts are entirely written in markdown which makes me able to write nicely structured documents quickly. The raw text of the markdown is stored as a regular text field in the sqlite database but at the stage when the backend grabs the field from the database, jinja parses it as html using the python module <a href="https://mistune.readthedocs.io/en/latest/intro.html" target="_blank" rel="noopener noreffer">mistune</a>. To spice the formatting up even further, since I will be probably be using code snippets, I added the syntax highlighter <a href="https://pygments.org/" target="_blank" rel="noopener noreffer">pygments</a>. In fact here is the code for the highlight renderer being rendered in it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">mistune</span>
<span class="kn">from</span> <span class="nn">pygments</span> <span class="kn">import</span> <span class="n">highlight</span>
<span class="kn">from</span> <span class="nn">pygments.lexers</span> <span class="kn">import</span> <span class="n">get_lexer_by_name</span>
<span class="kn">from</span> <span class="nn">pygments.formatters</span> <span class="kn">import</span> <span class="n">html</span>


<span class="k">class</span> <span class="nc">HighlightRenderer</span><span class="p">(</span><span class="n">mistune</span><span class="o">.</span><span class="n">Renderer</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">block_code</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">code</span><span class="p">,</span> <span class="n">lang</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">lang</span><span class="p">:</span>
            <span class="n">lexer</span> <span class="o">=</span> <span class="n">get_lexer_by_name</span><span class="p">(</span><span class="n">lang</span><span class="p">,</span> <span class="n">stripall</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
            <span class="n">formatter</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">HtmlFormatter</span><span class="p">(</span><span class="n">style</span><span class="o">=</span><span class="s1">&#39;monokai&#39;</span><span class="p">,</span> <span class="n">noclasses</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
            <span class="k">return</span> <span class="n">highlight</span><span class="p">(</span><span class="n">code</span><span class="p">,</span> <span class="n">lexer</span><span class="p">,</span> <span class="n">formatter</span><span class="p">)</span>
        <span class="k">return</span> <span class="s1">&#39;&lt;pre&gt;&lt;code&gt;&#39;</span> <span class="o">+</span> <span class="n">mistune</span><span class="o">.</span><span class="n">escape</span><span class="p">(</span><span class="n">code</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;&lt;/code&gt;&lt;/pre&gt;&#39;</span>

</code></pre></td></tr></table>
</div>
</div><p>It goes without saying that this website will continue to be updated as I change my mind on a few things and wish to add more functionality. On my list of todos are:</p>
<ul>
<li>A switch between light mode and dark mode</li>
<li>A way for people to follow the blog (maybe through RSS)</li>
<li>A way to better list out blog posts (currently all are listed on one page which will probably become cumbersome when they grow in number)</li>
</ul>
<p>In the meantime I hope you come back and see if I can offer you any informative content.</p>
]]></description>
</item><item>
    <title>The Layperson’s Guide to LaTeX</title>
    <link>https://codeluke.github.io/the-laypersons-guide-to-latex/</link>
    <pubDate>Wed, 06 Jan 2021 22:06:22 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://codeluke.github.io/the-laypersons-guide-to-latex/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/11/rainbow.jpg" referrerpolicy="no-referrer">
            </div><p>As part of my degree I will have to write many words into many documents and submit them all as part of assignments.</p>
<p>There was a time when we were young, stupid and thought that the peak of document formatting was WordArt, a drop shadow, and rainbow II. We would stick borders on our .pub files and feel superior if our PowerPoints had a dissolve transition. As we age past primary school we begin to conform to the world’s sensibilities that Comic Sans is not an adequate typeface and having every colour on the spectrum is a way to actually guarantee some of your text will be unreadable.</p>
<p>Since we are forced to conform, we might as well do it to perfection, and you can only go so far in a tool that still thinks that word processors need a background ‘water droplet’ texture fill.</p>
<h1 id="what-is-this-latex-and-why-is-it-not-pronounced-like-that">What is this LaTeX and Why is it Not Pronounced Like That?</h1>
<p>If you want a tool that focuses on the nicest looking documents without caving into the design requirements of 7 year olds, you have to go back to a time before texture fills. Actually you have to go back to a time before computers could even show pictures. Nice looking documents (i.e had legible fonts) had to be obtained using specialised typesetters that cost as much as a house, either that or you’d use a literal printing press – this was the time in which TeX was created. LaTeX is built on TeX and is its more approachable step-son. LaTeX uses a mark-up language to design its document with the idea being that you focus on the content while the engine works out the best formatting.</p>
<h1 id="isnt-this-a-bit-of-a-faff">Isn’t This a Bit of a Faff?</h1>
<p>It depends on your personality. If you are happy with documents that are only adequate, then continue in your mediocrity. But for those of us who seek perfection and see neuroplasticity as a fundamental attribute, LaTeX offers a sterling reward for your efforts.</p>
<h1 id="how-good-does-it-look">How Good Does it Look?</h1>
<p>In the days when people weren’t made of pixels I spent the time making my own word template. It had wonderful serif headings; all the styles used Word’s tools so it did as much of the heavy lifting as possible; and all the font sizes were made just right.</p>
<p>The results from Word are as follows:
</p>
<p>It looks <em>okay</em>. It looks far better than what some people create in Word. Even creating something okay looking feels like a hack though. Having nice paragraph spacing underneath headings required my to individually change all the line spacing options by hand. Anyone who has ever tried to implement code into a word document also knows that it will require you to sacrifice your firstborn.</p>
<p>Now, for a LaTeX document:
</p>
<p>No time spent messing with templates, no changing font sizes, and it probably took me less time to make a document that looks even better. The best thing about LaTeX is that because everything is done programmatically, it can have an integration that is mind boggling. For instance, if you want to insert a segment of a python script in your document you dont actually need to copy and paste bits into your .tex file. You can just tell it where the script is, give it the line numbers and it will display and format it all for you.</p>
<h1 id="where-do-i-begin">Where Do I Begin?</h1>
<p>This is for those of a Windows disposition</p>
<p>First install a distribution of LaTeX called <a href="https://miktex.org/download" target="_blank" rel="noopener noreffer">MiKTeX</a>. MiKTeX has everything you need and will make the whole experience as easy as possible.</p>
<p>Our code editor is called TeXworks, so open that up and lets write some LaTeX.</p>
<p>LaTeX follows a syntax of \command[option]{parameter} and we start a document off by selecting the type of document we want to create, and then starting and ending said document. There are a number of <a href="https://en.wikibooks.org/wiki/LaTeX/Document_Structure#Document_classes" target="_blank" rel="noopener noreffer">document classes</a> but article is the one recommended for most documents.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-latex" data-lang="latex"><span class="c">% Start of Document (Comments are denoted by a percentage at the start of the line)
</span><span class="c"></span><span class="k">\documentclass</span><span class="nb">{</span>article<span class="nb">}</span>
<span class="k">\begin</span><span class="nb">{</span>document<span class="nb">}</span>
I&#39;m so pretty
<span class="k">\end</span><span class="nb">{</span>document<span class="nb">}</span>
</code></pre></td></tr></table>
</div>
</div><p>And we get:
</p>
<p>Currently it looks like a note left by a serial killer with access to a typewriter so lets stick our name on it.</p>
<p>The title, date, and author of your document all have dedicated tags in LaTeX. They are \title \date and \author. We then tell LaTeX to show all these on the screen by using \maketitle</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-latex" data-lang="latex"><span class="c">% Start of Document (Comments are denoted by a percentage at the start of the line)
</span><span class="c"></span><span class="k">\documentclass</span><span class="nb">{</span>article<span class="nb">}</span>
 
<span class="k">\begin</span><span class="nb">{</span>document<span class="nb">}</span>
 
<span class="k">\title</span><span class="nb">{</span>My Pretty Document<span class="nb">}</span>
<span class="k">\author</span><span class="nb">{</span>J. Smith<span class="nb">}</span>
<span class="k">\date</span><span class="nb">{</span>23 November 1963<span class="nb">}</span>
<span class="k">\maketitle</span>
 
<span class="k">\end</span><span class="nb">{</span>document<span class="nb">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Output:
</p>
<p>You can hear groups of your preferred gender(s) running to throw themselves at you as we speak.</p>
<p>Now for some content. Once again there are various different types of <a href="https://en.wikibooks.org/wiki/LaTeX/Document_Structure#Sectioning_commands" target="_blank" rel="noopener noreffer">sectioning</a> you can use but we will use the pretty straight forward \section</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-latex" data-lang="latex"><span class="c">% Start of Document (Comments are denoted by a percentage at the start of the line)
</span><span class="c"></span><span class="k">\documentclass</span><span class="nb">{</span>article<span class="nb">}</span>
<span class="k">\begin</span><span class="nb">{</span>document<span class="nb">}</span>
 
<span class="k">\title</span><span class="nb">{</span>My Pretty Document<span class="nb">}</span>
<span class="k">\author</span><span class="nb">{</span>J. Smith<span class="nb">}</span>
<span class="k">\date</span><span class="nb">{</span>23 November 1963<span class="nb">}</span>
 
<span class="k">\maketitle</span>
 
<span class="k">\section</span><span class="nb">{</span>This is a subtitle<span class="nb">}</span>
I can just write text under the section tag and it will all be made nice
 
<span class="k">\section</span><span class="nb">{</span>This is my second subtitle<span class="nb">}</span>
I just add another section tag and it will become the second section in the document. Pretty cool!
 
<span class="k">\end</span><span class="nb">{</span>document<span class="nb">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Output:</p>
<p></p>
<p>Positive gasps emanate from the crowd at the sight of such serifs. You will notice that LaTex automatically added heading numbers and changed the weight, face, and size of the type to better suit a heading. <a href="https://en.wikibooks.org/wiki/LaTeX" target="_blank" rel="noopener noreffer">There are all sorts of things you can do</a> that I haven’t covered like how it can do bibliographies for you and organise images and figures correctly. There are also things that are beyond my knowledge like drawing your own 3d graphics within source. All of it can be taken one step at a time. If you don’t know something, look it up, learn how to do it, and implement it – it’s all pretty approachable.</p>
<p>LaTeX isn’t perfect in its implementation, only its possible output. For instance, the answer to the question ‘how do I insert an svg’ is ‘use a pdf instead’ but I hope I have given you a taste of a better alternative to Word, even if it does introduce the possibility that your reports can have syntax errors.</p>
<h1 id="further-notes">Further Notes</h1>
<p>If you are writing your reports in LaTeX like me then you will need the correct bibliography formatting. LaTeX offers a few styles by default but I have learned there is no such thing as a standard and my University (Newcastle) uses <a href="https://libguides.ncl.ac.uk/managing/harvard" target="_blank" rel="noopener noreffer">its own guidelines</a>. The process for creating your own style involves both a command line tool and further tweaking using a bespoke programming language using REVERSE POLISH NOTATION, which is what happens if Christopher Nolan got his hands on a compiler. To save my fellow students time, I created a style for Newcastle’s bibliography style and <a href="https://github.com/CodeLuke/Newcastle-BibTeX" target="_blank" rel="noopener noreffer">it is hosted on GitHub</a>.</p>
]]></description>
</item><item>
    <title>Inspection &amp; Dissection: Dice-Jack</title>
    <link>https://codeluke.github.io/inspection-and-dissection-dice-jack/</link>
    <pubDate>Tue, 24 Sep 2019 21:06:18 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://codeluke.github.io/inspection-and-dissection-dice-jack/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/10/dicejack1.png" referrerpolicy="no-referrer">
            </div><p>As part of a course we had to make a game in 2 days that involved random dice and be made as a Windows forms application with Visual Basic. So we had to make a game in something that was the furthest you could get from a game engine with a language I had never used before. But hey, <a href="https://en.wikipedia.org/wiki/Rogue_%28video_game%29" target="_blank" rel="noopener noreffer">Rogue</a> was made in 1980 and the graphics had to be ASCII so it could be worse.</p>
<p>The rest of the class generally stuck to the brief with 3 dice that you rolled and you got points for each dot.</p>
<p></p>
<p>As you can see, its rather simple. Theres 4 picture boxes, 4 labels, 2 buttons and a listbox. Dice are rolled, the dots are added up and the score is added to the listbox. After 5 rolls the game ends and the player is given their total score. But to know how I added further features we need to look at how this prototype was made.</p>
<h1 id="behind-the-prototype">Behind the prototype</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-vbnet" data-lang="vbnet">
<span class="k">Dim</span> <span class="n">Die1</span><span class="p">,</span> <span class="n">Die2</span><span class="p">,</span> <span class="n">Die3</span> <span class="ow">As</span> <span class="kt">Integer</span>
<span class="k">Dim</span> <span class="n">DicePoints</span> <span class="ow">As</span> <span class="kt">Integer</span>
<span class="k">Dim</span> <span class="n">random</span> <span class="ow">As</span> <span class="n">Random</span>
<span class="k">Dim</span> <span class="n">RollCount</span> <span class="ow">As</span> <span class="kt">Integer</span> <span class="o">=</span> <span class="n">0</span>
</code></pre></td></tr></table>
</div>
</div><p>So we have our variables declared in the convoluted VB way. Die1, Die2, and Die3 and the scores for the corresponding dice. DicePoints is the total of those 3 scores and rollcount keeps track of how many times the dice were rolled. Random is just an object we use to generate random numbers</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-vbnet" data-lang="vbnet"><span class="k">Private</span> <span class="k">Sub</span> <span class="nf">tmrTimer_Tick</span><span class="p">(</span><span class="n">sender</span> <span class="ow">As</span> <span class="kt">Object</span><span class="p">,</span> <span class="n">e</span> <span class="ow">As</span> <span class="n">EventArgs</span><span class="p">)</span> <span class="k">Handles</span> <span class="n">tmrTimer</span><span class="p">.</span><span class="n">Tick</span>
        <span class="c">&#39;Increments the load bar every tick
</span><span class="c"></span>        <span class="n">random</span> <span class="o">=</span> <span class="k">New</span> <span class="n">Random</span>
        <span class="n">prbLoad</span><span class="p">.</span><span class="n">Increment</span><span class="p">(</span><span class="n">4</span><span class="p">)</span>
        <span class="k">If</span> <span class="n">prbLoad</span><span class="p">.</span><span class="n">Value</span> <span class="o">=</span> <span class="n">100</span> <span class="k">Then</span>
        <span class="p">...</span>
        <span class="k">Else</span>
            <span class="c">&#39;Sets dice to random number when the timer ticks before the load is full
</span><span class="c"></span>            <span class="n">Die1</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">1</span><span class="p">,</span> <span class="n">7</span><span class="p">)</span>
            <span class="n">Die2</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">1</span><span class="p">,</span> <span class="n">7</span><span class="p">)</span>
            <span class="n">Die3</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">1</span><span class="p">,</span> <span class="n">7</span><span class="p">)</span>
 
            <span class="n">MatchImage</span><span class="p">(</span><span class="n">Die1</span><span class="p">,</span> <span class="n">pbxDie1</span><span class="p">)</span>
            <span class="n">MatchImage</span><span class="p">(</span><span class="n">Die2</span><span class="p">,</span> <span class="n">pbxDie2</span><span class="p">)</span>
            <span class="n">MatchImage</span><span class="p">(</span><span class="n">Die3</span><span class="p">,</span> <span class="n">pbxDie3</span><span class="p">)</span>
 
        <span class="k">End</span> <span class="k">If</span>
</code></pre></td></tr></table>
</div>
</div><p>On the board is a timer (inventfully called tmrTimer), it tick every 0.1s. Each tick it adds a bit onto the load bar at the bottom and randomizes the images on the dice. MatchImage is my own subroutine but all it does is take an integer and applies the correct face for it to whichever picture box I pass it.</p>
<p>Once the bar gets to 100, the fun begins.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-vbnet" data-lang="vbnet"><span class="k">If</span> <span class="n">prbLoad</span><span class="p">.</span><span class="n">Value</span> <span class="o">=</span> <span class="n">100</span> <span class="k">Then</span>
            <span class="c">&#39;Adds the necessary points on the random dice when the load bar 
</span><span class="c"></span>            <span class="c">&#39;reaches 100
</span><span class="c"></span>            <span class="n">tmrTimer</span><span class="p">.</span><span class="n">Stop</span><span class="p">()</span>
            <span class="n">prbLoad</span><span class="p">.</span><span class="n">Value</span> <span class="o">=</span> <span class="n">0</span>
            <span class="n">RollCount</span> <span class="o">+=</span> <span class="n">1</span>
            <span class="n">DicePoints</span> <span class="o">=</span> <span class="n">Die1</span> <span class="o">+</span> <span class="n">Die2</span> <span class="o">+</span> <span class="n">Die3</span> 
</code></pre></td></tr></table>
</div>
</div><p>We stop the timer ticking, we empty the load bar and we increment our roll counter before adding up all the spots on the dice, pretty simple.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-vbnet" data-lang="vbnet"><span class="c">&#39;Adds Score to list
</span><span class="c"></span><span class="n">lstScore</span><span class="p">.</span><span class="n">Items</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="s">&#34;Roll &#34;</span> <span class="o">&amp;</span> <span class="n">RollCount</span> <span class="o">&amp;</span> <span class="s">&#34;: &#34;</span> <span class="o">&amp;</span> <span class="n">DicePoints</span><span class="p">)</span>
<span class="n">GameScore</span> <span class="o">+=</span> <span class="n">DicePoints</span>
<span class="n">DicePoints</span> <span class="o">=</span> <span class="n">0</span>
</code></pre></td></tr></table>
</div>
</div><p>Almost done, we add our points to the listbox with some formatting. Add the points to the total score for the game and then set it back to 0.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-vbnet" data-lang="vbnet"><span class="k">If</span> <span class="n">RollCount</span> <span class="o">&gt;=</span> <span class="n">5</span> <span class="k">Then</span>
    <span class="n">MsgBox</span><span class="p">(</span><span class="s">&#34;Your game score was &#34;</span> <span class="o">&amp;</span> <span class="n">GameScore</span><span class="p">,,</span> <span class="s">&#34;Game Over&#34;</span><span class="p">)</span>
    <span class="n">tmrTimer</span><span class="p">.</span><span class="n">Stop</span><span class="p">()</span>
    <span class="n">btnStart</span><span class="p">.</span><span class="n">Enabled</span> <span class="o">=</span> <span class="k">False</span>
    <span class="n">btnReset</span><span class="p">.</span><span class="n">Enabled</span> <span class="o">=</span> <span class="k">True</span>
 
<span class="k">End</span> <span class="k">If</span>
</code></pre></td></tr></table>
</div>
</div><p>Then we check whether they have reached the magic 5 rolls, if so we tell them their score and let them reset the game</p>
<p>There is also some initialisation code that assigns images and there are event handlers that make the buttons work but this is the main logic. If you would like to see how that stuff works, you can find it at the <a href="https://github.com/CodeLuke/Dice-Alpha" target="_blank" rel="noopener noreffer">github repo</a></p>
<h1 id="the-evolution">The Evolution</h1>
<p>The following won’t include too many code snippets since it is slightly more extensive (the rushed deadline also means it resembles a tin of Heinz spaghetti in a tumble dryer but we’ll keep that between us)</p>
<p></p>
<p>Lets break this down.</p>
<p>First we have a background that was shamelessly made in powerpoint.</p>
<p></p>
<p>The rules, scores, and title are all labels. The bar on the right is made up of the same button and listbox items as before but with its properties edited to change colour, font and border style.</p>
<p><strong>The Rules have been changed to the following:</strong></p>
<ul>
<li>The goal is to get as close to 21 points without going over</li>
<li>There is a Player and a Dealer</li>
<li>Each contestant has 2 dice</li>
<li>The player goes first</li>
<li>Each dice spot is worth 2 points</li>
<li>If either the player or dealer goes over 21, they lose the game</li>
<li>After the first roll, if the player has not gone bust, they can choose to ‘stand’ or ‘hit’</li>
<li>If they ‘hit’, the dice are rolled again and the player can choose to add the points of either die or the total of both dice</li>
<li>The player must add a score after hitting, even if it means they will go ‘bust’</li>
<li>In the event of a tie, the game goes to the dealer</li>
</ul>
<p>The rules are based on those by <a href="http://www.chessandpoker.com/dice_blackjack.html" target="_blank" rel="noopener noreffer">James Yates</a></p>
<p>Instead of a big chunk of code I’m going to show you the process of a turn through our good old friend the flow chart. They can be intimidating but I’ve tried to make it in a way that is easy to follow and you should be ale to get a grasp of what the code is doing behind the scenes.</p>
<p></p>
<p>There you go, who needs a hundred lines of bolognese when you can have pastel shapes?</p>
<p>Those who played the game may also notice this is the first time I’ve included a computer-controlled opponent, ‘The Dealer’. The dealer is like the player but has the advantages of being able to go second and win in the result of a draw. The dealer’s choice code is as follows:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-vbnet" data-lang="vbnet"><span class="k">If</span> <span class="n">DealerCanChoose1</span> <span class="ow">And</span> <span class="k">Not</span> <span class="p">(</span><span class="n">DealerCanChoose2</span> <span class="ow">Or</span> <span class="n">DealerCanChooseBoth</span><span class="p">)</span> <span class="k">Then</span>
    <span class="n">DealerScore</span> <span class="o">+=</span> <span class="n">Die1</span> <span class="o">*</span> <span class="n">2</span>
 
<span class="k">ElseIf</span> <span class="n">DealerCanChoose2</span> <span class="ow">And</span> <span class="k">Not</span> <span class="p">(</span><span class="n">DealerCanChoose1</span> <span class="ow">Or</span> <span class="n">DealerCanChooseBoth</span><span class="p">)</span> <span class="k">Then</span>
    <span class="n">DealerScore</span> <span class="o">+=</span> <span class="n">Die2</span> <span class="o">*</span> <span class="n">2</span>
 
<span class="k">ElseIf</span> <span class="n">DealerCanChooseBoth</span> <span class="k">Then</span>
    <span class="n">DealerScore</span> <span class="o">+=</span> <span class="p">(</span><span class="n">Die1</span> <span class="o">+</span> <span class="n">Die2</span><span class="p">)</span> <span class="o">*</span> <span class="n">2</span>
 
<span class="k">ElseIf</span> <span class="n">DealerCanChoose1</span> <span class="ow">And</span> <span class="n">DealerCanChoose2</span> <span class="k">Then</span>
    <span class="k">If</span> <span class="n">Die1</span> <span class="o">&gt;</span> <span class="n">Die2</span> <span class="k">Then</span>
        <span class="n">DealerScore</span> <span class="o">+=</span> <span class="n">Die1</span> <span class="o">*</span> <span class="n">2</span>
    <span class="k">Else</span>
        <span class="n">DealerScore</span> <span class="o">+=</span> <span class="n">Die2</span> <span class="o">*</span> <span class="n">2</span>
    <span class="k">End</span> <span class="k">If</span>
<span class="k">End</span> <span class="k">If</span>
 
<span class="k">If</span> <span class="k">Not</span> <span class="p">(</span><span class="n">DealerCanChoose1</span> <span class="ow">Or</span> <span class="n">DealerCanChoose2</span> <span class="ow">Or</span> <span class="n">DealerCanChooseBoth</span><span class="p">)</span> <span class="k">Then</span>
    <span class="c">&#39;Dealer goes bust if no options are available
</span><span class="c"></span>    <span class="k">If</span> <span class="n">Die1</span> <span class="o">&lt;</span> <span class="n">Die2</span> <span class="k">Then</span>
        <span class="n">DealerScore</span> <span class="o">+=</span> <span class="n">Die1</span> <span class="o">*</span> <span class="n">2</span>
    <span class="k">Else</span>
        <span class="n">DealerScore</span> <span class="o">+=</span> <span class="n">Die2</span> <span class="o">*</span> <span class="n">2</span>
    <span class="k">End</span> <span class="k">If</span>
    <span class="n">DealerStand</span><span class="p">()</span>
    <span class="n">tmrDealer</span><span class="p">.</span><span class="n">Stop</span><span class="p">()</span>
 
<span class="k">ElseIf</span> <span class="n">DealerScore</span> <span class="o">&gt;</span> <span class="n">GameScore</span> <span class="k">Then</span>
    <span class="c">&#39;Dealer stands if their score is more than the player&#39;s
</span><span class="c"></span>    <span class="n">DealerStand</span><span class="p">()</span>
<span class="k">Else</span>
    <span class="n">DealerRoll</span><span class="p">()</span>
<span class="k">End</span> <span class="k">If</span>
</code></pre></td></tr></table>
</div>
</div><p>Before this code I run checks that see which options are available after a dealer rolls (these are the DealerCanChoose variables). Here there is a series of conditionals that look at the options and picks the best one for the dealer.</p>
<p>If there is only one option available, then the dealer will pick that one. If there is more than one option available then the dealer will pick whichever will get them the highest score that turn. If there are no options available then the dealer is bust and they will stand. The dealer will also stand if they have a score higher than that of the player. The dealer will continue to roll as long as they are lower than the player and their current score is under 17.</p>
<p>And thats the game! The quickest project I’ve ever done and although its rough around the edges the gameplay is solid and I got to grips with windows form’s implementation of an event-driven program. You can find the full source code <a href="https://github.com/CodeLuke/Dice-Jack" target="_blank" rel="noopener noreffer">here</a></p>
]]></description>
</item><item>
    <title>Probably</title>
    <link>https://codeluke.github.io/probably/</link>
    <pubDate>Sat, 17 Aug 2019 20:49:25 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://codeluke.github.io/probably/</guid>
    <description><![CDATA[<p>We are currently in a scholarly purgatory. The time between July and
September where you are attached to no institution, have no motivation and
spend months fretting over how your past self will affect your future self
(neither of which do anything for your current self)</p>
<p>At 11 am I received my AS results via e-mail (how modern) and received AAB
+ Distinction. I am happy with this. It’s literally the second-best results I
could have achieved at this point, but there is still an unsettling feeling around
me. Something is gnawing away at me that prevents me from enjoying this now.</p>
<p>During the summer months there isn’t a clear track to follow. No daily
lessons, no scheduled assignments. Any events just seem to be smeared across
what could possibly be discerned to be a date on close inspection. Nothing
tangible appears to be happening in terms of progress for long term goals and
as such there is no certainty.</p>
<p>The longer the time between terms, the more in flux my future appears to be.
I could always fall back on the ‘everything is fine’ mantra but then it feels
as if I’m not striving towards what I want, or that I’m setting myself up for
future regret about not putting in the effort where it needed to be. My mind
runs through permutations of events, “someone probably got 3 As, they’re
the ones who are going to receive your university offer” I feel myself
fretting. I shouldn’t fret, but I do. I know people who failed they’re exams
and they have to repeat a year of their life, they would kill to be in my
situation. There are also people who seem like demigods to me who always get
perfect scores along with having elaborate and incredible side projects. To
some my worries will seem preposterous, to others I will seem I don’t know how
lucky I am. Perhaps I’m both these things and perhaps I’m neither.</p>
<p>But I’m not in their situation, I’m in my situation and can only act within
the context of it. I want to achieve the best possible results I can, and I
didn’t. I wasn’t far off; in fact, I was damn close but it doesn’t matter the distance.
Out of the 216 combinations, I have satisfied 215, and the person inside me
that wanted that last one remains dissatisfied.</p>
<p>Will 1 mark affect whether I get an offer from my preferred university?
Probably not. <em>Probably</em> not. Probably is the most terrifying
word in the English language. There are no certainties in life, everything can
be prefixed with the word probably. Yet we feel the need to stick it
before only a few things, I presume this is to deliberately remind us of the
very large improbability of the task we about to undertake and then
what is the point of even specifying a chance in the first place? Perhaps a
wandering mind is a good sign. I’m not struggling to finance my education
through a side job or agonizing over planning to resist a year, I have a
supportive family and am grateful to my past self for not screwing everything
up terrible.</p>
<p>So. Is everything fine?</p>
<p>Probably.</p>
]]></description>
</item><item>
    <title>Making a Mobile App – Chapter 5: Go Your Own Way</title>
    <link>https://codeluke.github.io/making-a-mobile-app-chapter-5/</link>
    <pubDate>Sat, 09 Mar 2019 20:47:46 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://codeluke.github.io/making-a-mobile-app-chapter-5/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/9/xkcd378.png" referrerpolicy="no-referrer">
            </div><blockquote>
<p>“Real programmers set the universal constants at the start such that the &gt;universe evolves to contain the disk with the data they want .”</p>
<p>xkcd 378</p>
</blockquote>
<p>I wanted to add a gallery for users to be able to scroll through a variety of images so I did a quick google search about how I was going to go about it and I found <a href="https://www.npmjs.com/package/react-native-image-view" target="_blank" rel="noopener noreffer">react-native-image-view</a>. In 6 lines of code and an array of Imgur links you can have a decent and working image gallery, job sorted! Right?</p>
<p></p>
<p>In truth, it unsettled me. Was this cheating? Should I have created my own gallery? This package was better than anything I could come up with and something I wasn’t prepared to spend time on but I still felt like a part of the app was no longer mine.</p>
<p>These sorts of ideas are things I have seen keep cropping up across everything I have done. I see other people’s enemy movement packages in Unity and magic code on StackOverflow that does everything you need, but are these a step to far? Are you losing what it means to actuallly create something? I’ve had all these questions and I think I will always question myself about the balance between hard coding everything from scratch and using magic boxes that do the gruntwork for you, but for now I have decided it’s about scope. It is not within the scope of this project to make an image gallery, it is just a small feature in an app that is for doing something else. The amount of time it would take to create something like this is time that could be spent doing something else that is specific to this app and does require the time spent on it.</p>
<p>The way I intend to go about my projects is to learn what I need out of it and the crucial elements of it. If I’m making a game in Unity I would feel uncomfortable using someone else’s movement package, movement is such a core aspect of a game’s feel that I think I should have control over its nuance. Equally, I am ok with using an image viewer package as it means I can spend more time on bigger features and I will write my own image viewer if this one is no longer fit for purpose. This is a pet project and so it is really only my own motivation that is going to get it finished. The more time I spend on a time consuming feature, the less likely it is that the project will get finished. What I want out of this app is to come out the other side of it with something that is complete and to achieve this I need to pick and choose my battles.</p>
]]></description>
</item><item>
    <title>Making a Mobile App – Chapter 3: The Setup</title>
    <link>https://codeluke.github.io/making-a-mobile-app-chapter-3/</link>
    <pubDate>Mon, 10 Dec 2018 20:14:17 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://codeluke.github.io/making-a-mobile-app-chapter-3/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/7/drawingboard.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>“He attacked everything in life with a mix of extraordinary genius and naive &gt;incompetence, and it was often difficult to tell which was which.”</p>
<p>Douglas Adams</p>
</blockquote>
<p>Setting up your React/Expo app is fairly straightforward but does require using the command line and some basic knowledge. You can find further detail <a href="https://expo.io/learn" target="_blank" rel="noopener noreffer">here</a> but I’ll summarise it now.</p>
<p>Firstly you will need to download and install <a href="https://nodejs.org/en/" target="_blank" rel="noopener noreffer">Node.js</a> This is quite self explanatory as it has an actual wizard thus not requiring any command line interaction. Node is necessary for almost anything running local javascript. Next you’ll need to open the command line (found on windows by typing ‘cmd’ into the start menu) and run this command:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">npm install expo-cli --global
</code></pre></td></tr></table>
</div>
</div><p>You will then be asked to create an Expo account. Next you want no navigate to the directory where you want to store your app, this is done in windows by typing ‘cd’ followed by the directory. For example :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">cd C:\Users\&lt;Your Username&gt;\Documents\app
</code></pre></td></tr></table>
</div>
</div><p>Then run the commands:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">expo init my-new-project
cd my-new-project
expo start
</code></pre></td></tr></table>
</div>
</div><p>‘expo start’ will be the command you run in the directory whenever you want to run your Expo app. I would also recommend starting with the ‘tabs’ template as it places some very useful files and means you don’t need to set up your own navigation bars. After you have ran the start command your browser will open up with a QR code. Scan the QR code in the Expo app (<a href="https://play.google.com/store/apps/details?id=host.exp.exponent&amp;hl=en_GB" target="_blank" rel="noopener noreffer">Google Play</a> and <a href="https://itunes.apple.com/us/app/expo-client/id982107779?mt=8" target="_blank" rel="noopener noreffer">iOS</a>) and behold your first expo app. If you have experience in ReactJS, you can dive into the files with your text editor of choice (I prefer <a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreffer">VS Code</a>) and follow the instructions both in the app and consulting the <a href="https://docs.expo.io/versions/v31.0.0/workflow/up-and-running" target="_blank" rel="noopener noreffer">documentation</a>.  If you don’t have experience, I would recommend using the <a href="https://www.codecademy.com/learn" target="_blank" rel="noopener noreffer">Codeacademy</a> course on ReactJS and Javascript. Also remember Google is your best friend, if you don’t know something don’t be afraid to google it.</p>
]]></description>
</item><item>
    <title>Making a Mobile App – Chapter 2: A Bad Worker Blames His Tools</title>
    <link>https://codeluke.github.io/making-a-mobile-app-chapter-2/</link>
    <pubDate>Sun, 09 Dec 2018 20:07:21 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://codeluke.github.io/making-a-mobile-app-chapter-2/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/6/phone.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>“Don’t Panic.”</p>
<p>Douglas Adams</p>
<p>Finding the right tool for the job might be the most important thing I’ve learned &gt;in my short time in the world of development. The classic conversation &gt;everyone who wants to get into development goes something like this:</p>
<p>New Guy: “What programming language is best.”</p>
<p>Pro: “There isn’t one.”</p>
<p>New Guy: “Ok. Well what programming language should I use for X.”</p>
<p>Pro: “It depends.”</p>
<p>New Guy: “Fine. Well what should I use if I want to use X for Y.”</p>
<p>Pro: “Whatever you are comfortable with.”</p>
<p>New Guy: “What do you mean comfortable. I’ve never programmed before,
anyway its not as if a language is some sort of sofa. Hey! Where are you going!
you can’t just leave me here!”</p>
<p>Google: “Hello.”</p>
<p>New Guy: “What.”</p>
<p>Google: “I’m your new best friend.”</p>
</blockquote>
<p>There are so many use cases and things you might want to develop that almost every instance of someone’s development is bespoke to what they want. This is something that you have to have experiences before you understand it which makes it more useful for a new developer to learn while doing rather than learning then doing.</p>
<p>I had to find the right tools for what I wanted. My requirements for this app were based off of the time constraints I had, the lack of experience I had and the needs I felt the app had:</p>
<ol>
<li>Needed to be easy to port to different platforms.</li>
<li>Had to be easy to integrate design and programming elements together.</li>
<li>Needed to be able to make a professional and modern look.
4.Didn’t require low level access</li>
</ol>
<p>I settled on <a href="https://facebook.github.io/react-native/" target="_blank" rel="noopener noreffer">React Native</a> with the <a href="https://expo.io/" target="_blank" rel="noopener noreffer">Expo toolchain</a>. I felt React was by far the best option I had. The only other options were using C# to make a Xamarin.Forms app which felt a bit like using a jackhammer to do teeth surgery or learning to use Java and Objective-C/Swift to do native development and use a completely different codebase, not only would I have to learn two languages and systems at once but also would need to fork out an initial cost of $99 for an apple developer account and develop on an Mac which I neither have nor want.</p>
<p>I’m using Expo because it means the app will be fully cross platform and I don’t need to interact with any of the awkward SDK’s and system specific stuff. Expo also provides a neat app that you run on your Android or iOS which connects to a local server with the app files and allows you to run your app within their app, no compiling, no apple developer account, no Mac. This made testing incredibly easy. Expo also handles keystoring for Android and all that fancy stuff.</p>
]]></description>
</item></channel>
</rss>
